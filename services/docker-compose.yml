version: "3.9"

services:
  # Base de datos para auth-usuarios
  db-auth:
    image: postgres:16
    environment:
      POSTGRES_USER: mu
      POSTGRES_PASSWORD: mu
      POSTGRES_DB: mercadourbano
    ports:
      - "5432:5432"
    volumes:
      - db_auth_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mu -d mercadourbano"]
      interval: 5s
      timeout: 5s
      retries: 20

  # Base de datos para recomendaciones
  db-recomendaciones:
    image: postgres:16
    environment:
      POSTGRES_USER: mu
      POSTGRES_PASSWORD: mu
      POSTGRES_DB: recomendaciones
    ports:
      - "5433:5432"     # <- puerto diferente
    volumes:
      - db_recomendaciones_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mu -d recomendaciones"]
      interval: 5s
      timeout: 5s
      retries: 20
      
  api-recomendaciones:
    build: ./recomendaciones
    environment:
      DATABASE_URL: postgres://mu:mu@db-recomendaciones:5432/recomendaciones
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    depends_on:
      db-recomendaciones:
        condition: service_healthy
    ports:
      - "3000:3000"
  # Base de datos para catÃ¡logo de productos
  db-catalogo:
    image: postgres:16
    environment:
      POSTGRES_USER: mu
      POSTGRES_PASSWORD: mu
      POSTGRES_DB: catalogo_productos
    ports:
      - "5434:5432"
    volumes:
      - db_catalogo_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mu -d catalogo_productos"]
      interval: 5s
      timeout: 5s
      retries: 20
      
  catalogo-productos:
    build: ./catalogo-productos
    ports:
      - "3004:3004"
    volumes:
      - ./catalogo-productos:/app  
      - /app/node_modules          
    env_file:
      - ./catalogo-productos/.env

  # Base de datos para pedidos
  db-pedidos:
    image: postgres:16
    environment:
      POSTGRES_USER: mu
      POSTGRES_PASSWORD: mu
      POSTGRES_DB: pedidos
    ports:
      - "5435:5432"
    volumes:
      - db_pedidos_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mu -d pedidos"]
      interval: 5s
      timeout: 5s
      retries: 20

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  db_auth_data:
  db_recomendaciones_data:
  db_catalogo_data:
  db_pedidos_data:
